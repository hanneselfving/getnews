from selenium import webdriver
from selenium.webdriver.common.by import By
import time
from datetime import datetime

# Function to save results to a text file with the current date and time
def save_results_to_file(results):
    now = datetime.now()
    current_time = now.strftime("%Y-%m-%d_%H-%M-%S")
    filename = f"flashback_threads_{current_time}.txt"
    with open(filename, "w", encoding="utf-8") as file:
        file.write("Top 5 Most Read Threads\n")
        file.write(f"Scraped at: {now}\n\n")
        for index, result in enumerate(results):
            file.write(f"Thread {index + 1}: {result['title']}, Readers: {result['readers']}\n")
    print(f"Results saved to {filename}")

# Set up the WebDriver (assuming Chrome)
driver = webdriver.Chrome()

# Load the Flashback 'Nya Ämnen' page
url = "https://www.flashback.org/nya-amnen"
driver.get(url)

# Wait for the page to load
time.sleep(4)  # Adjust the time if needed for the page to fully load

# Fetch the thread titles and their corresponding reader counts
threads = driver.find_elements(By.CLASS_NAME, 'thread-title')  # Thread titles have the class 'thread-title'
readers_info = driver.find_elements(By.XPATH, "//div[contains(text(), 'visningar')]")  # Use CSS selector for multiple classes

# Collect data
results = []
for i, thread in enumerate(threads):
    title = thread.text
    # Find the corresponding reader count from 'visible-xs text-muted' class
    if i < len(readers_info):
        readers_text = readers_info[i].text
        # Extract number of readers from the text (look for the pattern with 'läsare')
        if "l" in readers_text:
            reader_count = readers_text.split("l")[0].strip().split()[-1]  # Extract the number before 'läsare'
        else:
            reader_count = "N/A"  # If no 'läsare' found or format mismatch
    else:
        reader_count = "N/A"  # Fallback if index out of bounds
    
    results.append({"title": title, "readers": reader_count})

# Save results to a file
save_results_to_file(results)

# Close the driver
driver.quit()